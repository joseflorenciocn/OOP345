Script started on Thu 22 Mar 2018 10:07:33 PM EDT
jcoelho-neto@matrix:~/OOP345/w5> whoamn[Ki
jcoelho-neto
jcoelho-neto@matrix:~/OOP345/w5> cat Grades.cpp
#include <iostream>
#include <fstream>
#include <string>
#include "Grades.h"




Grades::Grades()
{
	mp_id = nullptr;
	mp_grade = nullptr;
	m_size = 0;	
}


Grades::Grades(const char* filename)
{
	m_size = 0;
	char delimiter = '\n';

	std::ifstream file;
	file.open(filename);

	try
	{


		if (file.is_open())
		{
			//count the number of records in the file
			do
			{

				getline(file, m_student);// , delimiter);

				if (!m_student.empty())	m_size++;

			} while (file);


			//allocate memory for student info's array
			mp_id = new int[m_size];
			mp_grade = new double[m_size];
			int flag = 0;

			// rewind
			file.clear();
			file.seekg(0, file.beg);

			// fills the array with student info
			while (file.good())
			{
				file >> mp_id[flag];
				file >> mp_grade[flag];
				flag++;
			}

			file.close();
		}
		else
		{
			throw "File doesn't open";
		}
	}
	catch (const char* message) 
	{
		std::cout << "Error in: " << message << std::endl;
	}

	
}

Grades::~Grades() 
{
	// deallocates memory
	delete[] mp_id;
	delete[] mp_grade;
}

void Grades::displayGrades(std::ostream& out, std::string(*letterfunc)(double)) const
{

	// for each element, print one record
	for (int i = 0; i < m_size; i++) 
	{
		if (letterfunc(mp_grade[i]) == "Z") throw mp_id[i];
		else out << mp_id[i] << ' ' << mp_grade[i] << ' ' << letterfunc(mp_grade[i]) << std::endl;
	}
}



		
jcoelho-neto@matrix:~/OOP345/w5> cat w5.cpp
// Workshop 6 - Lambda Expression
// w6.cpp

#include <iostream>
#include <math.h>
#include "Grades.h"

int main(int argc, char* argv[]) {
	if (argc != 2) {
		std::cerr << argv[0] <<
			": incorrect number of arguments\n";
		std::cerr << "Usage: " << argv[0] << " file_name\n";
		return 1;
	}


	Grades grades(argv[1]);
	// define the lambda expression for letter

	// lambda expression to calculate the letter grade
	auto letter = [](double grade) {
		std::string result;

		// round the grade
		grade = round(grade);

		// calculate the letter value for the grade
		if (grade >= 90 && grade <= 100) result = "A+";
		else if (grade >= 80 && grade <= 89) result = "A";
		else if (grade >= 75 && grade <= 79) result = "B+";
		else if (grade >= 70 && grade <= 74) result = "B";
		else if (grade >= 65 && grade <= 69) result = "C+";
		else if (grade >= 60 && grade <= 64) result = "C";
		else if (grade >= 55 && grade <= 59) result = "D+";
		else if (grade >= 50 && grade <= 54) result = "D";
		else if (grade >= 0 && grade <= 49) result = "F";
		else                                result = "Z"; // not a grade ~ error

		return result;
	};


	try
	{
		grades.displayGrades(std::cout, letter);
	}
	catch (const int& id)
	{
		std::cout << "Grade of " << id << " not allowed" << std::endl;
	}



	std::cout << "Press any key to continue ... ";
	std::cin.get();
}
jcoelho-neto@matrix:~/OOP345/w5> cat w5.cppGrades.cpp[8Pwhoamidoxygen Doxyfile-g[Kscript m1_script.txt[7P.txt[8Pclearm1 malformed.txt "|"g++ -std=c++0x -o m1 main.cpp Utilities.cpp Task.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[32Pm1 malformed.txt "|"clear[Kscript m1.txt_script.txt[10Pdoxygen -gDoxyfile[10Pwhoamicat Grades.cpp[4Pw5.cpp[Kcat w5.cppGrades.cpp[8Pwhoamidoxygen Doxyfile-g[Kscript m1_script.txt[7P.txt[8Pclearm1 malformed.txt "|"g++ -std=c++0x -o m1 main.cpp Utilities.cpp Task.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[32Pm1 malformed.txt "|"g++ -std=c++0x -o m1 main.cpp Utilities.cpp Task.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[32Pm1 malformed.txt "|"[1@whitespace[C[C[C[C[C[C[C[C[5Pclean[C[C[C[C[C[C[C[Cg++ -std=c++0x -o m1 main.cpp Utilities.cpp Task.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[31Pcd OOP345/Project/m1/g++ -std=c++0x -o m1 main.cpp Utilities.cpp Task.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[31Pcd OOP345/Project/m1/g++ -std=c++0x -o m1 main.cpp Utilities.cpp Task.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cm1 clean.txt "|"[K[5@whitespace[C[C[C[C[C[C[C[C[1Pmalformed[C[C[C[C[C[C[C[Cg++ -std=c++0x -o m1 main.cpp Utilities.cpp Task.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[32Pm1 malformed.txt "|"g++ -std=c++0x -o m1 main.cpp Utilities.cpp Task.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[32Pm1 malformed.txt "|"clear[Kscript m1.txt_script.txt[10Pdoxygen -gDoxyfile[10Pwhoamicat Grades.cpp[4Pw5.cpp[Kcat w5.cppGrades.cpp[8Pwhoamidoxygen Doxyfile-g[Kscript m1_script.txt[7P.txt[8Pclearm1 malformed.txt "|"g++ -std=c++0x -o m1 main.cpp Utilities.cpp Task.cpp[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kw5 w5.cpp Grades.cpp
jcoelho-neto@matrix:~/OOP345/w5> g++ -std=c++0x -o w5 w5.cpp Grades.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccat w5.cpp[KGrades.cpp[4Pw5.cppg++ -std=c++0x -o w5 w5.cpp Grades.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Kw5 grade.txt
1022342 67.4 C+
1024567 73.5 B
2031456 79.3 B+
6032144 53.5 D
1053250 92.1 A+
3026721 86.5 A
7420134 62.3 C
9762314 58.7 D+
6521045 34.6 F
Press any key to continue ... 
jcoelho-neto@matrix:~/OOP345/w5> exit
exit

Script done on Thu 22 Mar 2018 10:08:53 PM EDT
